{"version":3,"file":"run.js","names":["fs","defaultBuildExtension","showDesktopNotification","defaultDesktopNotifications","defaultFirefoxApp","connectWithMaxRetries","defaultFirefoxClient","createLogger","defaultGetValidatedManifest","UsageError","createExtensionRunner","defaultReloadStrategy","MultiExtensionRunner","DefaultMultiExtensionRunner","log","import","meta","url","run","artifactsDir","browserConsole","pref","firefox","firefoxProfile","profileCreateIfMissing","keepProfileChanges","ignoreFiles","noInput","noReload","preInstall","sourceDir","watchFile","watchIgnored","startUrl","target","args","adbBin","adbHost","adbPort","adbDevice","adbDiscoveryTimeout","adbRemoveOldArtifacts","firefoxApk","firefoxApkComponent","chromiumBinary","chromiumProfile","buildExtension","desktopNotifications","firefoxApp","firefoxClient","reloadStrategy","getValidatedManifest","info","Array","isArray","every","el","customPrefs","manifestData","profileDir","isDir","existsSync","mkdir","runners","commonRunnerParams","extensions","length","includes","firefoxDesktopRunnerParams","firefoxBinary","profilePath","firefoxDesktopRunner","params","push","firefoxAndroidRunnerParams","buildSourceDir","extensionSourceDir","tmpArtifactsDir","asNeeded","showReadyMessage","firefoxAndroidRunner","chromiumRunnerParams","chromiumRunner","extensionRunner"],"sources":["../../src/cmd/run.js"],"sourcesContent":["/* @flow */\nimport { fs } from 'mz';\n\nimport defaultBuildExtension from './build.js';\nimport {\n  showDesktopNotification as defaultDesktopNotifications,\n} from '../util/desktop-notifier.js';\nimport * as defaultFirefoxApp from '../firefox/index.js';\nimport {\n  connectWithMaxRetries as defaultFirefoxClient,\n} from '../firefox/remote.js';\nimport {createLogger} from '../util/logger.js';\nimport defaultGetValidatedManifest from '../util/manifest.js';\nimport {UsageError} from '../errors.js';\nimport {\n  createExtensionRunner,\n  defaultReloadStrategy,\n  MultiExtensionRunner as DefaultMultiExtensionRunner,\n} from '../extension-runners/index.js';\n// Import objects that are only used as Flow types.\nimport type {FirefoxPreferences} from '../firefox/preferences.js';\n\nconst log = createLogger(import.meta.url);\n\n\n// Run command types and implementation.\n\nexport type CmdRunParams = {|\n  artifactsDir: string,\n  browserConsole: boolean,\n  pref?: FirefoxPreferences,\n  firefox: string,\n  firefoxProfile?: string,\n  profileCreateIfMissing?: boolean,\n  ignoreFiles?: Array<string>,\n  keepProfileChanges: boolean,\n  noInput?: boolean,\n  noReload: boolean,\n  preInstall: boolean,\n  sourceDir: string,\n  watchFile?: Array<string>,\n  watchIgnored?: Array<string>,\n  startUrl?: Array<string>,\n  target?: Array<string>,\n  args?: Array<string>,\n\n  // Android CLI options.\n  adbBin?: string,\n  adbHost?: string,\n  adbPort?: string,\n  adbDevice?: string,\n  adbDiscoveryTimeout?: number,\n  adbRemoveOldArtifacts?: boolean,\n  firefoxApk?: string,\n  firefoxApkComponent?: string,\n\n  // Chromium Desktop CLI options.\n  chromiumBinary?: string,\n  chromiumProfile?: string,\n|};\n\nexport type CmdRunOptions = {\n  buildExtension: typeof defaultBuildExtension,\n  desktopNotifications: typeof defaultDesktopNotifications,\n  firefoxApp: typeof defaultFirefoxApp,\n  firefoxClient: typeof defaultFirefoxClient,\n  reloadStrategy: typeof defaultReloadStrategy,\n  shouldExitProgram?: boolean,\n  MultiExtensionRunner?: typeof DefaultMultiExtensionRunner,\n  getValidatedManifest?: typeof defaultGetValidatedManifest,\n};\n\nexport default async function run(\n  {\n    artifactsDir,\n    browserConsole = false,\n    pref,\n    firefox,\n    firefoxProfile,\n    profileCreateIfMissing,\n    keepProfileChanges = false,\n    ignoreFiles,\n    noInput = false,\n    noReload = false,\n    preInstall = false,\n    sourceDir,\n    watchFile,\n    watchIgnored,\n    startUrl,\n    target,\n    args,\n    // Android CLI options.\n    adbBin,\n    adbHost,\n    adbPort,\n    adbDevice,\n    adbDiscoveryTimeout,\n    adbRemoveOldArtifacts,\n    firefoxApk,\n    firefoxApkComponent,\n    // Chromium CLI options.\n    chromiumBinary,\n    chromiumProfile,\n  }: CmdRunParams,\n  {\n    buildExtension = defaultBuildExtension,\n    desktopNotifications = defaultDesktopNotifications,\n    firefoxApp = defaultFirefoxApp,\n    firefoxClient = defaultFirefoxClient,\n    reloadStrategy = defaultReloadStrategy,\n    MultiExtensionRunner = DefaultMultiExtensionRunner,\n    getValidatedManifest = defaultGetValidatedManifest,\n  }: CmdRunOptions = {}): Promise<DefaultMultiExtensionRunner> {\n\n  log.info(`Running web extension from ${sourceDir}`);\n  if (preInstall) {\n    log.info('Disabled auto-reloading because it\\'s not possible with ' +\n             '--pre-install');\n    noReload = true;\n  }\n\n  if (watchFile != null && (!Array.isArray(watchFile) ||\n      !watchFile.every((el) => typeof el === 'string'))) {\n    throw new UsageError('Unexpected watchFile type');\n  }\n\n  // Create an alias for --pref since it has been transformed into an\n  // object containing one or more preferences.\n  const customPrefs = pref;\n  const manifestData = await getValidatedManifest(sourceDir);\n\n  const profileDir = firefoxProfile || chromiumProfile;\n\n  if (profileCreateIfMissing) {\n    if (!profileDir) {\n      throw new UsageError(\n        '--profile-create-if-missing requires ' +\n        '--firefox-profile or --chromium-profile'\n      );\n    }\n    const isDir = fs.existsSync(profileDir);\n    if (isDir) {\n      log.info(`Profile directory ${profileDir} already exists`);\n    } else {\n      log.info(`Profile directory not found. Creating directory ${profileDir}`);\n      await fs.mkdir(profileDir);\n    }\n  }\n\n  const runners = [];\n\n  const commonRunnerParams = {\n    // Common options.\n    extensions: [{sourceDir, manifestData}],\n    keepProfileChanges,\n    startUrl,\n    args,\n    desktopNotifications,\n  };\n\n  if (!target || target.length === 0 || target.includes('firefox-desktop')) {\n    const firefoxDesktopRunnerParams = {\n      ...commonRunnerParams,\n\n      // Firefox specific CLI options.\n      firefoxBinary: firefox,\n      profilePath: firefoxProfile,\n      customPrefs,\n      browserConsole,\n      preInstall,\n\n      // Firefox runner injected dependencies.\n      firefoxApp,\n      firefoxClient,\n    };\n\n    const firefoxDesktopRunner = await createExtensionRunner({\n      target: 'firefox-desktop',\n      params: firefoxDesktopRunnerParams,\n    });\n    runners.push(firefoxDesktopRunner);\n  }\n\n  if (target && target.includes('firefox-android')) {\n    const firefoxAndroidRunnerParams = {\n      ...commonRunnerParams,\n\n      // Firefox specific CLI options.\n      profilePath: firefoxProfile,\n      customPrefs,\n      browserConsole,\n      preInstall,\n      firefoxApk,\n      firefoxApkComponent,\n      adbDevice,\n      adbHost,\n      adbPort,\n      adbBin,\n      adbDiscoveryTimeout,\n      adbRemoveOldArtifacts,\n\n      // Injected dependencies.\n      firefoxApp,\n      firefoxClient,\n      desktopNotifications: defaultDesktopNotifications,\n      buildSourceDir: (extensionSourceDir: string, tmpArtifactsDir: string) => {\n        return buildExtension({\n          sourceDir: extensionSourceDir,\n          ignoreFiles,\n          asNeeded: false,\n          // Use a separate temporary directory for building the extension zip file\n          // that we are going to upload on the android device.\n          artifactsDir: tmpArtifactsDir,\n        }, {\n          // Suppress the message usually logged by web-ext build.\n          showReadyMessage: false,\n        });\n      },\n    };\n\n    const firefoxAndroidRunner = await createExtensionRunner({\n      target: 'firefox-android',\n      params: firefoxAndroidRunnerParams,\n    });\n    runners.push(firefoxAndroidRunner);\n  }\n\n  if (target && target.includes('chromium')) {\n    const chromiumRunnerParams = {\n      ...commonRunnerParams,\n      chromiumBinary,\n      chromiumProfile,\n    };\n\n    const chromiumRunner = await createExtensionRunner({\n      target: 'chromium',\n      params: chromiumRunnerParams,\n    });\n    runners.push(chromiumRunner);\n  }\n\n  const extensionRunner = new MultiExtensionRunner({\n    desktopNotifications,\n    runners,\n  });\n\n  await extensionRunner.run();\n\n  if (noReload) {\n    log.info('Automatic extension reloading has been disabled');\n  } else {\n    log.info('The extension will reload if any source file changes');\n\n    reloadStrategy({\n      extensionRunner,\n      sourceDir,\n      watchFile,\n      watchIgnored,\n      artifactsDir,\n      ignoreFiles,\n      noInput,\n    });\n  }\n\n  return extensionRunner;\n}\n"],"mappings":"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"}